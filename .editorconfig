# https://editorconfig-specification.readthedocs.io

# default editorconfig
## https://docs.microsoft.com/en-us/dotnet/fundamentals/code-analysis/code-style-rule-options#example-editorconfig-file

root = true

[*]
indent_style = space # default: space
indent_size = 2 # default: 4 for cs,csx,vb,vbx
end_of_line = lf # default: ???
charset = utf-8 # default: utf-8-bom, DISCOURAGED
trim_trailing_whitespace = true # default: ???
insert_final_newline = true # default: true
max_line_length = 80 # default: ???


[*.cs]
# .net formatting

## using directive options

dotnet_sort_system_directives_first = true # default: true
dotnet_separate_import_directive_groups = false # default: ???

## dotnet namespace options

dotnet_style_namespace_match_folder = true # default: ???

# c# formatting

## new-line options

csharp_new_line_before_open_brace = none # default: all
csharp_new_line_before_else = false # default: true
csharp_new_line_before_catch = false # default: true
csharp_new_line_before_finally = false # default: true
csharp_new_line_before_members_in_object_initializers = true # default: true
csharp_new_line_before_members_in_anonymous_types = true # default: true
csharp_new_line_between_query_expression_clauses = true # default: true

## indentation options

csharp_indent_case_contents = true # default: true
csharp_indent_switch_labels = true # default: true
csharp_indent_labels = flush_left # default: flush_left
csharp_indent_block_contents = true # default: ???
csharp_indent_braces = false # default: ???
csharp_indent_case_contents_when_block = false # default: ???

## spacing options

csharp_space_after_cast = false # default: false
csharp_space_after_keywords_in_control_flow_statements = true # default: true
csharp_space_between_parentheses = false # default: false
csharp_space_before_colon_in_inheritance_clause = true # default: true
csharp_space_after_colon_in_inheritance_clause = true # default: true
csharp_space_around_binary_operators = before_and_after # default: before_and_after
csharp_space_between_method_declaration_parameter_list_parentheses = false # default: false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false # default: false
csharp_space_between_method_declaration_name_and_open_parenthesis = false # default: ???
csharp_space_between_method_call_parameter_list_parentheses = false # default: false
csharp_space_between_method_call_empty_parameter_list_parentheses = false # default: false
csharp_space_between_method_call_name_and_opening_parenthesis = false # default: false
csharp_space_after_comma = true # default: ???
csharp_space_before_comma = false # default: ???
csharp_space_after_dot = false # default: ???
csharp_space_before_dot = false # default: ???
csharp_space_after_semicolon_in_for_statement = true # default: ???
csharp_space_before_semicolon_in_for_statement = false # default: ???
csharp_space_around_declaration_statements = false # default: ???
csharp_space_before_open_square_brackets = false # default: ???
csharp_space_between_empty_square_brackets = false # default: ???
csharp_space_between_square_brackets = false # default: ???

## wrap options

csharp_preserve_single_line_statements = false # default: true
csharp_preserve_single_line_blocks = true # default: true

## using directive options
# repeated by IDE0065
# csharp_using_directive_placement = outside_namespace # default: outside_namespace

# naming

## styles

### PascalCase

dotnet_naming_style.PascalCase.capitalization = pascal_case

### IPascalCase

dotnet_naming_style.IPascalCase.capitalization = pascal_case
dotnet_naming_style.IPascalCase.required_prefix = I

### TPascalCase

dotnet_naming_style.TPascalCase.capitalization = pascal_case
dotnet_naming_style.TPascalCase.required_prefix = T

### camelCase

dotnet_naming_style.camelCase.capitalization = camel_case

### SCREAMING_SNAKE_CASE

dotnet_naming_style.SCREAMING_SNAKE_CASE.capitalization = all_upper
dotnet_naming_style.SCREAMING_SNAKE_CASE.word_separator = _

### _camelCase

dotnet_naming_style._camelCase.capitalization = camel_case
dotnet_naming_style._camelCase.required_prefix = _

## types and namespaces

dotnet_naming_symbols.types_and_namespaces.applicable_kinds = namespace, class, struct, enum
dotnet_naming_rule.types_and_namespaces_must_be_pascal_case.symbols = types_and_namespaces
dotnet_naming_rule.types_and_namespaces_must_be_pascal_case.style = PascalCase
dotnet_naming_rule.types_and_namespaces_must_be_pascal_case.severity = warning

## interfaces

dotnet_naming_symbols.interfaces.applicable_kinds = interface
dotnet_naming_rule.interfaces_must_be_pascal_case_prefixed_with_I.symbols = interfaces
dotnet_naming_rule.interfaces_must_be_pascal_case_prefixed_with_I.style = IPascalCase
dotnet_naming_rule.interfaces_must_be_pascal_case_prefixed_with_I.severity = warning

## type parameters

dotnet_naming_symbols.type_parameters.applicable_kinds = type_parameter
dotnet_naming_rule.type_parameters_must_be_pascal_case_prefixed_with_T.symbols = type_parameters
dotnet_naming_rule.type_parameters_must_be_pascal_case_prefixed_with_T.style = TPascalCase
dotnet_naming_rule.type_parameters_must_be_pascal_case_prefixed_with_T.severity = warning

## methods

dotnet_naming_symbols.methods.applicable_kinds = method
dotnet_naming_rule.methods_must_be_camel_case.symbols = methods
dotnet_naming_rule.methods_must_be_camel_case.style = camelCase
dotnet_naming_rule.methods_must_be_camel_case.severity = warning

## properties

dotnet_naming_symbols.properties.applicable_kinds = property
dotnet_naming_rule.properties_must_be_camel_case.symbols = properties
dotnet_naming_rule.properties_must_be_camel_case.style = camelCase
dotnet_naming_rule.properties_must_be_camel_case.severity = warning

## events

dotnet_naming_symbols.events.applicable_kinds = event
dotnet_naming_rule.events_must_be_pascal_case.symbols = events
dotnet_naming_rule.events_must_be_pascal_case.style = PascalCase
dotnet_naming_rule.events_must_be_pascal_case.severity = warning

## local variables

dotnet_naming_symbols.local_variables.applicable_kinds = local
dotnet_naming_rule.local_variables_must_be_camel_case.symbols = local_variables
dotnet_naming_rule.local_variables_must_be_camel_case.style = camelCase
dotnet_naming_rule.local_variables_must_be_camel_case.severity = warning

## local constants

dotnet_naming_symbols.local_constants.applicable_kinds = local
dotnet_naming_symbols.local_constants.required_modifiers = const
dotnet_naming_rule.local_constants_must_be_screaming_snake_case.symbols = local_constants
dotnet_naming_rule.local_constants_must_be_screaming_snake_case.style = SCREAMING_SNAKE_CASE
dotnet_naming_rule.local_constants_must_be_screaming_snake_case.severity = warning

## parameters

dotnet_naming_symbols.parameters.applicable_kinds = parameter
dotnet_naming_rule.parameters_must_be_camel_case.symbols = parameters
dotnet_naming_rule.parameters_must_be_camel_case.style = camelCase
dotnet_naming_rule.parameters_must_be_camel_case.severity = warning

## fields

dotnet_naming_symbols.fields.applicable_kinds = field
dotnet_naming_rule.fields_must_be_camel_case.symbols = fields
dotnet_naming_rule.fields_must_be_camel_case.style = camelCase
dotnet_naming_rule.fields_must_be_camel_case.severity = warning

## private fields

dotnet_naming_symbols.private_fields.applicable_kinds = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private, private_protected
dotnet_naming_rule.private_fields_must_be_camel_case.symbols = private_fields
dotnet_naming_rule.private_fields_must_be_camel_case.style = _camelCase
dotnet_naming_rule.private_fields_must_be_camel_case.severity = warning

## constant fields

dotnet_naming_symbols.constant_fields.applicable_kinds = field
dotnet_naming_symbols.constant_fields.required_modifiers = const
dotnet_naming_rule.constant_fields_must_be_screaming_snake_case.symbols = constant_fields
dotnet_naming_rule.constant_fields_must_be_screaming_snake_case.style = SCREAMING_SNAKE_CASE
dotnet_naming_rule.constant_fields_must_be_screaming_snake_case.severity = warning

## local functions

dotnet_naming_symbols.local_functions.applicable_kinds = local_function
dotnet_naming_rule.local_functions_must_be_camel_case.symbols = local_functions
dotnet_naming_rule.local_functions_must_be_camel_case.style = camelCase
dotnet_naming_rule.local_functions_must_be_camel_case.severity = warning

## delegates

dotnet_naming_symbols.delegates.applicable_kinds = delegate
dotnet_naming_rule.delegates_must_be_camel_case.symbols = delegates
dotnet_naming_rule.delegates_must_be_camel_case.style = camelCase
dotnet_naming_rule.delegates_must_be_camel_case.severity = warning

# language rules

## this and Me preferences

dotnet_diagnostic.IDE0003.severity = warning
dotnet_style_qualification_for_field = false # default: false
dotnet_style_qualification_for_property = false # default: false
dotnet_style_qualification_for_method = false # default: false
dotnet_style_qualification_for_event = false # default: false

## use language keywords for types

dotnet_diagnostic.IDE0049.severity = warning
dotnet_style_predefined_type_for_locals_parameters_members = true # default: true
dotnet_style_predefined_type_for_member_access = true # default: true

## modifier preferences

### order modifiers

dotnet_diagnostic.IDE0036.severity = warning
# default: public, private, protected, internal, file, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, required, volatile, async
csharp_preferred_modifier_order = public, private, protected, internal, file, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, required, volatile, async

### add accessibility modifiers

dotnet_diagnostic.IDE0040.severity = warning
dotnet_style_require_accessibility_modifiers = for_non_interface_members # default: for_non_interface_members

### add readonly modifier

dotnet_diagnostic.IDE0044.severity = warning
dotnet_style_readonly_field = true # default: true

### make local function static

dotnet_diagnostic.IDE0062.severity = warning
csharp_prefer_static_local_function = true:suggestion # default: true:suggestion

### make struct fields writable

dotnet_diagnostic.IDE0064.severity = warning

## parentheses preferences

dotnet_diagnostic.IDE0048.severity = warning
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity # default: always_for_clarity
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity # default: always_for_clarity
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity # default: always_for_clarity
dotnet_style_parentheses_in_other_operators = never_if_unnecessary # default: never_if_unnecessary

## expression level preferences

### add missing cases to switch statement

dotnet_diagnostic.IDE0010.severity = warning

### use object initializers

dotnet_diagnostic.IDE0017.severity = warning
dotnet_style_object_initializer = true # default: true

### inline variable declaration

dotnet_diagnostic.IDE0018.severity = warning
csharp_style_inlined_variable_declaration = true # default: true

### use collection initializers

dotnet_diagnostic.IDE0028.severity = warning
dotnet_style_collection_initializer = true # default: true

### use auto-implemented property

dotnet_diagnostic.IDE0032.severity = warning
dotnet_style_prefer_auto_properties = true # default: true

### use explicitly provided tuple name

dotnet_diagnostic.IDE0033.severity = warning
dotnet_style_explicit_tuple_names = true # default: true

### simplify 'default' expression

dotnet_diagnostic.IDE0034.severity = warning
csharp_prefer_simple_default_expression = true # default: true

### use inferred member names

dotnet_diagnostic.IDE0037.severity = warning
dotnet_style_prefer_inferred_tuple_names = true # default: true
dotnet_style_prefer_inferred_anonymous_type_member_names = true # default: true

### use local function instead of lambda

dotnet_diagnostic.IDE0039.severity = warning
csharp_style_prefer_local_over_anonymous_function = true # default: true

### deconstruct variable declaration

dotnet_diagnostic.IDE0042.severity = warning
csharp_style_deconstructed_variable_declaration = true # default: true

### use conditional expression for assignment

dotnet_diagnostic.IDE0045.severity = warning
dotnet_style_prefer_conditional_expression_over_assignment = true # default: true

### use conditional expression for return

dotnet_diagnostic.IDE0046.severity = warning
dotnet_style_prefer_conditional_expression_over_return = true # default: true

### convert anonymous type to tuple

dotnet_diagnostic.IDE0050.severity = warning

### use compound assignment

dotnet_diagnostic.IDE0054.severity = warning
dotnet_diagnostic.IDE0074.severity = warning
dotnet_style_prefer_compound_assignment = true # default: true

### use index operator

dotnet_diagnostic.IDE0056.severity = warning
csharp_style_prefer_index_operator = true # default: true

### use range operator

dotnet_diagnostic.IDE0057.severity = warning
csharp_style_prefer_range_operator = true # default: true

### use 'System.HashCode.Combine'

dotnet_diagnostic.IDE0070.severity = warning

### simplify interpolation

dotnet_diagnostic.IDE0071.severity = warning
dotnet_style_prefer_simplified_interpolation = true # default: true

### add missing cases to switch expression

dotnet_diagnostic.IDE0072.severity = warning

### simplify conditional expression

dotnet_diagnostic.IDE0075.severity = warning
dotnet_style_prefer_simplified_boolean_expressions = true # default: true

### convert typeof to nameof

dotnet_diagnostic.IDE0082.severity = warning

### simplify new expression

dotnet_diagnostic.IDE0090.severity = warning
csharp_style_implicit_object_creation_when_type_is_apparent = true # default: true

### use tuple to swap values

dotnet_diagnostic.IDE0180.severity = warning
csharp_style_prefer_tuple_swap = true # default: true

## namespace declaration preferences

dotnet_diagnostic.IDE0160.severity = warning
csharp_style_namespace_declarations = block_scoped # default: block_scoped

## null-checking preferences

### use throw expression

dotnet_diagnostic.IDE0016.severity = warning
csharp_style_throw_expression = true # default: true

### use coalesce expression

dotnet_diagnostic.IDE0030.severity = warning
dotnet_style_coalesce_expression = true # default: true

### use null propagation

dotnet_diagnostic.IDE0031.severity = warning
dotnet_style_null_propagation = true # default: true

### use 'is null' check

dotnet_diagnostic.IDE0041.severity = warning
dotnet_style_prefer_is_null_check_over_reference_equality_method = true # default: true

### prefer 'null' check over type check

dotnet_diagnostic.IDE0150.severity = warning
csharp_style_prefer_null_check_over_type_check = true # default: true

### use conditional delegate call

dotnet_diagnostic.IDE1005.severity = warning
csharp_style_conditional_delegate_call = true # default: true

## var preferences

dotnet_diagnostic.IDE0007.severity = warning
csharp_style_var_for_built_in_types = true # default: false
csharp_style_var_when_type_is_apparent = true # default: false
csharp_style_var_elsewhere = true # default: false

## expression-bodied-members

### use expression body for constructors

dotnet_diagnostic.IDE0021.severity = none
csharp_style_expression_bodied_constructors = false # default: false

### use expression body for methods

dotnet_diagnostic.IDE0022.severity = none
csharp_style_expression_bodied_methods = false # default: false

### use expression body for operators

dotnet_diagnostic.IDE0023.severity = none
dotnet_diagnostic.IDE0024.severity = none
csharp_style_expression_bodied_operators = false # default: false

### use expression body for properties

dotnet_diagnostic.IDE0025.severity = warning
csharp_style_expression_bodied_properties = true # default: true

### use expression body for indexers

dotnet_diagnostic.IDE0026.severity = warning
csharp_style_expression_bodied_indexers = true # default: true

### use expression body for accessors

dotnet_diagnostic.IDE0027.severity = warning
csharp_style_expression_bodied_accessors = true # default: true

### use expression body for lambdas

dotnet_diagnostic.IDE0053.severity = warning
csharp_style_expression_bodied_lambdas = true # default: true

### use expression body for local functions

dotnet_diagnostic.IDE0061.severity = none
csharp_style_expression_bodied_local_functions = false # default: false

## pattern matching preferences

### use pattern matching to avoid 'as' followed by a 'null' check

dotnet_diagnostic.IDE0019.severity = warning
csharp_style_pattern_matching_over_as_with_null_check = true # default: true

### use pattern matching to avoid 'is' check followed by a cast

dotnet_diagnostic.IDE0038.severity = warning
csharp_style_pattern_matching_over_is_with_cast_check = true # default: true

### use switch expression

dotnet_diagnostic.IDE0066.severity = warning
csharp_style_prefer_switch_expression = true # default: true

### use pattern matching

dotnet_diagnostic.IDE0078.severity = warning
csharp_style_prefer_pattern_matching = true # default: true

### use pattern matching

dotnet_diagnostic.IDE0083.severity = warning
csharp_style_prefer_not_pattern = true # default: true

### simplify property pattern

dotnet_diagnostic.IDE0170.severity = warning
csharp_style_prefer_extended_property_pattern = true # default: true

## code block preferences

### add braces

dotnet_diagnostic.IDE0011.severity = warning
csharp_prefer_braces = true # default: true

### use simple 'using' statement

dotnet_diagnostic.IDE0063.severity = warning
csharp_prefer_simple_using_statement = true # default: true

## using directive preferences

### 'using' directive placement

dotnet_diagnostic.IDE0065.severity = warning
csharp_using_directive_placement = outside_namespace # default: outside_namespace

## file header preferences

### require file header

dotnet_diagnostic.IDE0073.severity = none
file_header_template = unset # default: unset

# unnecessary code rules

## simplify name

dotnet_diagnostic.IDE0001.severity = warning

## simplify member access

dotnet_diagnostic.IDE0002.severity = warning

## remove unnecessary cast

dotnet_diagnostic.IDE0004.severity = warning

## remove unnecessary using directives

dotnet_diagnostic.IDE0005.severity = warning

## remove unreachable code

dotnet_diagnostic.IDE0035.severity = warning

## remove unused private member

dotnet_diagnostic.IDE0051.severity = warning

## remove unread private member

dotnet_diagnostic.IDE0052.severity = warning

## remove unnecessary expression value

dotnet_diagnostic.IDE0058.severity = warning
csharp_style_unused_value_expression_statement_preference = discard_variable # default: discard_variable

## remove unnecessary value assignment

dotnet_diagnostic.IDE0059.severity = warning
csharp_style_unused_value_assignment_preference = discard_variable # default: discard_variable

## remove unused parameter

dotnet_diagnostic.IDE0060.severity = warning
dotnet_code_quality_unused_parameters = all # default: all

## remove unnecessary suppression

dotnet_diagnostic.IDE0079.severity = warning
dotnet_remove_unnecessary_suppression_exclusions = none # default: none

## remove unnecessary suppression operator

dotnet_diagnostic.IDE0080.severity = warning

## remove unnecessary equality operator

dotnet_diagnostic.IDE0100.severity = warning

## remove unnecessary discard

dotnet_diagnostic.IDE0110.severity = warning

# miscellaneous rules

## remove invalid global 'SuppressMessageAttribute'

dotnet_diagnostic.IDE0076.severity = warning

## avoid legacy format target in global 'SuppressMessageAttribute'

dotnet_diagnostic.IDE0077.severity = warning
